 
The repository contains two  main folders :

/preparation - containing the preparatory steps and the associated scripts to generate the starting lipid membrane systems that we used to collect the Molecular Dynamics (MD) simulations
/simulations - containing the productive MD simulations
/analysis - containing the analysis that we collected on the MD trajectories

When we refer to the simulations folder, this is meant to be available through OSF https://osf.io/3j2ap/ (due to space limitation) 

In this project, we employed and adapted several python scripts provided by Lisbeth Olsson’s group  (freely available at GitHub repository: https://github.com/SGenheden/Scripts) to prepare the starting membrane models. We collected these python scripts under the folder /preparation/python_scripts/Scripts-master/ and the instructions and requirements necessary to use them are described here (see below). We conducted the preparations and simulations using GROMACS v5.1 and the Stockholm lipids force field (Slipids https://doi.org/10.1021/ct300342n), which has been previously modified to include topologies and parameters for additional long acyl-chain lipids (https://doi.org/10.1002/bit.25845). A copy of the port of this force field is provided in our repository in simulations/slipids.ff for the user’s reference. The topologies and parameters (.itp files) for the long acyl-chain lipids (named AOPC/AOPI, BOPC/BOPI, LOPC/LOPI, see the manuscript for additional details about the properties of these lipids) were generated starting from already available lipids in Slipids (SOPC for the AOPC, BOPC, LOPC and POPI for the AOPI,BOPI,LOPI) using the script extended_topol.py located in preparation/python_scripts/SCRIPTS. All of these .itp files are included in the simulations/slipids.ff (and also in all the other copy of this folder in the repository).
N.B. To follow our procedure be careful to source GROMACS if the GROMACS tools are not available system-wide.

#### PREPARATIONS ####
In the preparation folder, there are eleven subfolders associated with: 
i) the membrane model (/Null) that we used as a reference to build the systems with long-acyl chain lipids
ii-ix) the membrane models with increasing concentrations of long-acyl chain lipids (named /8per /16per  /24per  /32per  /40per  /48per  /64per  /96per)
x) the scripts required to generate the membrane models (/python_scripts)
xi) other useful scripts (/other_scripts)

All the python scripts to generate the next steps can be found (and executed from) in the preparation/python_scripts folder and preparation/other_scripts folders. Moreover, some case-specific bash scripts are already provided in the proper folders to be executed. 

---------------------------------------------------------------------------------------------------------------------------
*The following section provides the instructions and a step by step guide on how to generate the Null-64 model and how to simulate it for a total of 200ns.
---------------------------------------------------------------------------------------------------------------------------
To reproduce our preparation protocols, one should start from the Null folder. In this folder, the inputs and outputs for the preparation of the starting system consisting of 64 lipids (named Null and composed by a bilayer of 32 lipids per leaflet) are included. To build this system we started from a previously published yeast membrane model (https://doi.org/10.1002/bit.25845, https://doi.org/10.15698/mic2018.01.609) composed by 32 POPI, 22 DOPC and 10 ERG lipids, generated by CHARMM-membrane builder. The membrane model was solvated using 40 water molecules per lipid and 32 NA+ ions. The outputs of the CHARMM-membrane builder, i.e. the structure (step5_assembly.pdb) and topology (step5_assembly.str) of the Null system, are located in the sub-folder named 32popi_22dopc_10erg. 
The first step is to go to:

cd preparation/Null/32popi_22dopc_10erg

Firstly we converted the structure and topology (step5_assembly.pdb and step5_assembly.str) into the file formats of GROMACS (.gro and .top for the structure and the topology, respectively). We converted the step5_assembly.pdb into a .gro file (called step5_assembly.gro) using the builder2gro.sh script located in the preparation/other_scripts folder.

bash ../../other_scripts/builder2gro.sh step5_assembly 

After, we used the step5_assembly.str to produce a .top file (called system.top) using cat-based commands. The script, in this case, is already in the working folder, since it is case-specific :

bash generate_top.sh
cp system.top Minimization/

We then used the reorder.sh script in the preparation/other_script folder to produce from the step5_assembly.gro file another .gro file (called initial.gro) in which the number of the atoms are reordered in agreement with the system.top.

bash ../../other_scripts/reorder.sh   

We used the initial.gro for the Minimization step, carried out in preparation/Null/32popi_22dopc_10erg/Minimization, by employing the min.sh script located in the same directory. As input, we used a .mdp file with the parameters for the minimization step in GROMACS (called em.mdp), a copy of the system.top and the /slipids.ss in the same directory, whereas the initial.gro is called from the previous location (../).

cd Minimization
bash min.sh

Once the Minimization is done, we removed all the output files except the final structure (em.gro) and the same structure in which we fixed the periodic boundary condition artifacts using the GROMACS tool trjconv and the option -whole which makes visually-broken molecules whole (em_whole.gro). In this minimized system, we introduced 10 IPC lipid molecules by replacing 10 random POPI lipids. To do so, access the folder preparation/10ipc_22popi_22dopc_10erg


cd ../../10ipc_22popi_22dopc_10erg/ 

And we used the popi2ipc.sh script, already located in the working folder, since it is case-specific:

bash popi2ipc.sh
 
This script uses as inputs the structure and topology of an IPC molecule (ipc.pdb, ipc.itp and ipc.zmat), already produced for previous publications (https://doi.org/10.1002/bit.25845, https://doi.org/10.15698/mic2018.01.609) and already located in the working folder. The output is a .gro file (called replace.gro) with the intended substitution. We used the generate_top.sh script to produce the topology (called system.top) file associated with replace.gro and we copied it in the Minimization/ and Equilibration/ folder. The generate_top.sh script, in this case, is already in the working folder, since it is case-specific:

bash generate_top.sh
cp system.top Minimization/
cp system.top Equilibration/

In order to minimize and equilibrate the structure access firstly Minimization/ :

cd Minimization/

And we run the min.sh in the same directory:

bash min.sh

As input, we used a .mdp file with the parameters for the minimization step in GROMACS (called em.mdp), a copy of the system.top and the /slipids.ss in the same directory, whereas the replaced.gro is called from the previous location (../). Subsequently, the equilibration step was analogous to the minimization. Access the folder with :

cd ../Equilibration


and run equi.sh in the same directory:
bash equi.sh

As input, we used a .mdp file with the parameters for the equilibration step in GROMACS (called equil-short.mdp), a copy of the system.top and the slipids.ss/ in the same directory, whereas the final structure after the minimization step (called em.gro) is called from the Minimization folder (../Minimization). With the equi.sh script we extracted four random structures, as .gro files, from the equilibration trajectory and treated them for the periodic boundary condition as explained before (called equil_5ns_whole_4500ps.gro  equil_5ns_whole_4650ps.gro  equil_5ns_whole_4800ps.gro  equil_5ns_whole.gro). We used the four structures to build bigger membrane models (called Null-256 see below). We used the final structure of the Equilibration step (called equil_5ns.gro) to run a productive MD simulation of 200ns located in simulations/Null/64lipids_heavyh/
To access the folder :

cd ../../../../simulations/Null/64lipids_heavyh/

We generated a topology  .top file (called 64lipids_heavyh.top) from equil_5ns.gro using the generate_top.sh script. The generate_top.sh script, in this case, is already in the working folder, since it is case-specific:

bash generate_top.sh

And then we run the productive the MD simulations using the production.sh script:

bash production.sh 

As input, we used a .mdp file with the parameters for productive MD simulation in GROMACS (called production.mdp), the 64lipids_heavyh.top, the slipids.ss in the same directory, whereas the final structure of the Equilibration step (called equil_5ns.gro) is called from the Equilibration/ folder (../../../preparation/Null/10ipc_22popi_22dopc_10erg/Equilibration/equil_5ns.gro).

---------------------------------------------------------------------------------------------------------------------------
*The following section provides the instructions and a step by step guide on how to generate the Null-256 model and its four replicates and how to simulate them for a total of 200ns.
---------------------------------------------------------------------------------------------------------------------------
We used the four structures previously extracted from the equilibration of the 10ipc_22popi_22dopc_10erg system (Null 64 lipids) (called equil_5ns_whole_4500ps.gro  equil_5ns_whole_4650ps.gro  equil_5ns_whole_4800ps.gro  equil_5ns_whole.gro) to generate bigger membrane models composed by 256 lipids (named Null-256). Firstly access the directory from the previous folder (simulations/Null/64lipids_heavyh/)  with:

cd ../256lipids_heavyh/

Here, we run the extension_256.sh script:

bash extension_256.sh

This script extends the four structures (.gro) in the x and y direction obtaining four membranes consisting of 256 lipids, maintaining the starting lipid ratio (called 256lipids_expanded.gro, r2_256lipids_expanded.gro, r3_256lipids_expanded.gro, r4_256lipids_expanded.gro). We produced a topology .top file (called 256lipids.top) accordingly to the .gro files using the generate_top.sh script. The generate_top.sh script, in this case, is already in the working folder, since it is case-specific. 

bash generate_top.sh

We then used the reorder_replicate.sh script to reorder the numbers of the atoms in the .gro files (256lipids_expanded.gro, r2_256lipids_expanded.gro, r3_256lipids_expanded.gro, r4_256lipids_expanded.gro) in agreement with the topology file (256lipids.top) and produce the starting structures for the MD simulations (called 256lipids_initial.gro, r2_256lipids_initial.gro, r3_256lipids_initial.gro, r4_256lipids_initial.gro). 

bash reorder_replicate.sh

We generated the topology files (called 256lipids_heavyh.top) necessary for the hydrogen mass-repartitioning approach using the generate_heavyh_top.sh script. The generate_heavy_top.sh script, in this case, is already in the working folder, since it is case-specific.

                            bash generate_heavy_top.sh

In a subfolder for each of the four structures (called replicate1-4) we collected 200 ns productive MD simulations. We run the productive MD simulations with the production.sh script. For example in the case of the replicate 1: 
                                                          
                                cd replicate1
bash production.sh

As input, we used a .mdp file with the parameters for productive MD simulation in GROMACS (called production.mdp) and the slipids.ss/ in the same directory, whereas the .gro (256lipids_initial.gro, r2_256lipids_initial.gro, r3_256lipids_initial.gro, r4_256lipids_initial.gro) and the .top (256lipids_heavyh.top) files are called from the previous folder (../). The production.sh script extracts the structure of the system (.gro file) after 100 ns of MD simulations and corrects the periodic boundary condition artifacts as explained before (called r1_256lipids_heavyh_md1_whole.gro for replicate 1, r2_256lipids_heavyh_md1_whole.gro for replicate 2, r3_256lipids_heavyh_md1_whole.gro for replicate 3, r4_256lipids_heavyh_md1_whole.gro for replicate 4).

---------------------------------------------------------------------------------------------------------------------------
*The following section provides the instructions and a step by step guide on how to generate the membrane models with long-acyl chain lipids, their 3-5 replicates and how to simulate them for a total of 300-500ns.
---------------------------------------------------------------------------------------------------------------------------

We used the four membrane models previously produced (Null-256 replicate 1-4) to prepare the membrane systems with long-acyl chain lipids. We decided to produce eight membrane systems with increasing concentrations of long-acyl chain lipids 8, 16, 24, 32, 40, 48, 64 and 96% (called 8per, 16per,  24per,  32per,  40per,  48per,  64per,  96per).  For each system, we generated three different long-acyl chain lipids: 20 Carbon atoms  AOPC/AOPI, 22 Carbon atoms BOPC/BOPI, 24 Carbon atoms LOPC /LOPI using a 4:2:1 ratio.
We started from the four structures previously collected after 100ns of MD simulations of each replicate of the Null-256 system (r1_256lipids_heavyh_md1_whole.gro, r2_256lipids_heavyh_md1_whole.gro, r3_256lipids_heavyh_md1_whole.gro, r4_256lipids_heavyh_md1_whole.gro) each located in the corresponding folder under simulations/Null/256lipids_heavyh. 
For each of the 8per, 16per, 24per, 32per, 40per systems we prepared four replicates (separated preparation steps) each one starting from the structure of the corresponding replicate of the Null-256 system (e.g. the starting structure of the first replicate of the 8per system is the structure r1_256lipids_heavyh_md1_whole.gro extracted from the first replicate of the Null-256 system and so on). Moreover for the 40per system we collected an additional replicate, starting from the structure r1_256lipids_heavyh_md1_whole.gro of the first replicate of the Null-256 system (common preparation steps) but changing the random seed parameters in the .mdp file (called md_500ns.mdp see below) for the productive MD simulation. For each of the 48per, 64per, 96per we prepared three replicates starting from the structure r1_256lipids_heavyh_md1_whole.gro of the first replicate of the Null-256 system (common preparation steps) but changing the random seed parameters in the .mdp file (called md_500ns.mdp see below) for the productive MD simulations.
Here an example of the procedure that we followed to prepare the four replicates of the system 8per and 48per. The steps in this procedure need to be repeated to reproduce the preparations for all the other long-acyl chain systems in our repository (see description above). Only the suffix in the file and folder names are going to be different to reflect the name of the system and the number of the replicate.

To begin the preparation of the long-acyl chain 8per system, access the preparation/8per folder from simulations/Null/256lipids_heavyh/replicate4 with : 

cd ../../../../preparation/8per/

We produced a topology .top file (called m1.top in this case) accordingly to the selected .gro file (r1_256lipids_heavyh_md1_whole.gro) using the generate_top.sh script. The generate_top.sh script, in this case, is already in the working folder, since it is case-specific. 

bash generate_top.sh

We then copied the generated .top file (m1.top) in the Minimization and Equilibration folder of each replicate (e.g. replicate1/Minimization and replicate1/Equilibration). To do so we used:

cp m1.top replicate1/Minimization
cp m1.top replicate1/Equilibration

We repeated the same steps for the other folders (named replicate2, replicate3 and replicate4)
To continue we run:

bash replicate.sh 

In sequence, this script: 
i)  extend the acyl chains of a selected number of DOPC and POPI lipids from the .gro files of the four structures selected from the Null-256 system (r1_256lipids_heavyh_md1_whole.gro, r2_256lipids_heavyh_md1_whole.gro, r3_256lipids_heavyh_md1_whole.gro, r4_256lipids_heavyh_md1_whole.gro see above).
For example, in the 8per system we extended the acyl chains of four DOPC and four POPI lipids to 20 carbon atoms (named AOPC/AOPI), of two DOPC and two POPI lipids to 22 carbon atoms (named BOPC/BOPI) and of one DOPC and one POPI lipids to 24 carbon atoms (named LOPC /LOPI), using a 4:2:1 ratio. The replicate.sh randomly selects the DOPC and POPI lipids that are extended in each .gro. The output of this step are four files identified with the suffix  _extended (e.g.  r1_256lipids_heavyh_md1_whole_extended.gro)

ii) Saturated the long-acyl chains AOPC,BOPC,LOPC to remove the artificial double bond, since the topologies for these PC lipids were created from the one of SOPC. The output of this step are four files identified with the suffix  _saturated (e.g.  r1_256lipids_heavyh_md1_whole_saturated.gro)

iii) Renamed the hydrogen atoms of AOPC,BOPC,LOPC to correct the mismatches between DOPC and SOPC topologies. The output of this step are four files identified with the suffix  _saturated (e.g.  r1_256lipids_heavyh_md1_whole_saturated.gro)

iv) Reordered the obtained .gro files using the .top file (m1.top) The output of this step are four files identified with the suffix  _initial (e.g.  r1_256lipids_heavyh_md1_whole_initial.gro)
This are the starting structures for minimization step.

To start the minimization step access the Minimization/ folder in replicate1/Minimization with : 

cd replicate1/Minimization

And we run the min.sh in the same directory:

bash min.sh

As input, we used a .mdp file with the parameters for the minimization step in GROMACS (called em.mdp), a copy of the .top file (m1.top) and the /slipids.ss in the same directory, whereas the correct .gro (e.g. r1_256lipids_heavyh_md1_whole_initial.gro for the replicate1)  is called from the previous location (../).
After the minimization step is completed access the Equilibration/ folder with 

cd ../Equilibration

and run equi.sh in the same directory:
bash equi.sh

As input, we used a .mdp file with the parameters for the equilibration step in GROMACS (called equil-short.mdp), a copy of the .top file (m1.top) and the slipids.ss/ in the same directory, whereas the final structure after the minimization step (called em.gro) is called from the Minimization folder (../Minimization). We repeated the same steps for the 16per 24per 32per 40per systems.

To begin the preparation of the long-acyl chain 48per system, access the preparation/48per folder from simulations/Null/256lipids_heavyh/replicate4 with : 

cd ../../../../preparation/48per/

We produced a topology .top file (called m6.top in this case) accordingly to the selected .gro file (r1_256lipids_heavyh_md1_whole.gro) using the generate_top.sh script. The generate_top.sh script, in this case, is already in the working folder, since it is case-specific. 

bash generate_top.sh

We then copied the generated .top file (m6.top) in the Minimization and Equilibration folder (e.g. Minimization and replicate1/Equilibration). To do so we used:

cp m6.top Minimization/
cp m6.top Equilibration/

To continue we run:

bash replicate.sh 

In sequence, this script: 
i)  extend the acyl chains of a selected number of DOPC and POPI lipids from the .gro files of the structure selected from the Null-256 system (r1_256lipids_heavyh_md1_whole.gro see above).
For example, in the 48per system we extended the acyl chains of 24 DOPC and 24 POPI lipids to 20 carbon atoms (named AOPC/AOPI), of 12 DOPC and 12 POPI lipids to 22 carbon atoms (named BOPC/BOPI) and of six DOPC and six POPI lipids to 24 carbon atoms (named LOPC /LOPI), using a 4:2:1 ratio. The replicate.sh randomly selects the DOPC and POPI lipids that are extended in the .gro. The output of this step is a file identified with the suffix  _extended (r1_256lipids_heavyh_md6_whole_extended.gro)

ii) Saturated the long-acyl chains AOPC,BOPC,LOPC to remove the artificial double bond, since the topologies for these PC lipids were created from the one of SOPC. The output of this step is a file identified with the suffix  _saturated (e.g.  r1_256lipids_heavyh_md6_whole_saturated.gro)

iii) Renamed the hydrogen atoms of AOPC,BOPC,LOPC to correct the mismatches between DOPC and SOPC topologies. The output of this step is a file identified with the suffix  _saturated (r1_256lipids_heavyh_md6_whole_saturated.gro)

iv) Reordered the obtained .gro file using the .top file (m6.top) The output of this step is a file identified with the suffix  _initial (r1_256lipids_heavyh_md6_whole_initial.gro)
This are the starting structures for minimization step.

To start the minimization step access the Minimization/ folder with : 

cd Minimization

And we run the min.sh in the same directory:

bash min.sh

As input, we used a .mdp file with the parameters for the minimization step in GROMACS (called em.mdp), a copy of the .top file (m6.top) and the /slipids.ss in the same directory, whereas the correct .gro (r1_256lipids_heavyh_md6_whole_initial.gro)  is called from the previous location (../).
After the minimization step is completed access the Equilibration/ folder with 

cd ../Equilibration

and run equi.sh in the same directory:
bash equi.sh

As input, we used a .mdp file with the parameters for the equilibration step in GROMACS (called equil-short.mdp), a copy of the .top file (m6.top) and the slipids.ss/ in the same directory, whereas the final structure after the minimization step (called em.gro) is called from the Minimization folder (../Minimization). We repeated the same steps for the 64per, 96per systems.

To collect the productive MD simulations of the previously generated long-acyl chain 8per systems, access the folder with (if followed all the steps before from preparation/96per/Equilibration ) :

cd simulations/8per/

Here access the replicate1-4/500ns folders  and execute the run.sh script with :

cd replicate1/500ns
bash run.sh

The procedure is then repeated for the remaining replicate2-4/500ns folders. As input, we used a .mdp file with the parameters for productive MD simulation in GROMACS (called md_500ns.mdp) , the slipids.ss/ in the same directory, whereas the .gro after the Equilibration  steps (called m1_r1_equil_5ns.gro for the replicate1 of the 8per system) and the .top (m1.top in the case of the 8per system) files are called from the respective replicate1-4 folders in preparations/8per. The procedure is analogues for all the remaining system ( in the case of 48per/replicate1 ,64per/replicate3, 96per/replicate3 we have a folder named 300ns instead of 500ns to identify the short ). As stated before for 48per, 64per and 96per systems we modified the parameter for the random seed in the .mdp file.

------------------------------------------------------------------------------------------------------------------------
*The following section provides the instructions and a step by step guide on how to run the analysis for all the obtained trajectories for our properties of interest.
------------------------------------------------------------------------------------------------------------------------

The analysis that we collected on the MD trajectories are located in the main folder /analysis. The scripts to collected the data and plot them are already in each subfolder. For example, to reproduce the analyses collected on the 8per system access the analyses/8per subfolder with :

cd analysis/8per


In each folder, we used the longer_analysis_300.bash and longer_analysis_500.bash scripts to perform the analysis. These scripts are case-sensitive and already located in the right folders. The scripts work in an identical fashion but they calculate the properties, respectively, on 300ns and 500ns of the productive MD simulation trajectories for all the replicates of the system under study. To run the scripts use:

bash longer_analysis_300ns.bash
bash longer_analysis_500ns.bash

They create a subfolder for each replicate of the system, in the case of the 8per system four of them (8per/replicate1, 8per/replicate2 etc.). In each of these subfolders the scripts create two separate folder 300ns/ and 500ns/ and move the output files directly there. The scripts used automatically as input the MD trajectory (.xtc file) of each replicate, in the case of the 8per system from the simulation/8per/replicate1-4 folders, and the starting run input file (.tpr file) and corrected the periodic boundary condition artifacts. Example: 

8per/replicate1/300ns 
8per/replicate1/500ns

This operation is analogous for the systems 8per, 16per,  24per,  32per,  40per,  48per,  64per,  96per. In the case of the Null-256 system, the analyses are located in analyses/Null/256lipids-heavyh/. In this folder  we used the longer_analysis.bash script to collect the analysis on the 200ns MD trajectories of the Null-256 system. This script is case-sensitive and already located in the right folders. To begin, access the Null model:

cd analyses/Null/256lipids_heavyh
And then we run:
bash longer_analysis.bash


The output files of these scripts are similar for all the systems and are defined by the suffix of the name of each system and replica (e.g. m1_r1_memprop_dt.txt for the analysis file of the 8per system and replicate 1). They are described below : 
 
Area per Lipid and Thickness 

*_memprop_dt.txt : contains the per frame values of the following parameters Area per lipid, Volume per lipid, Thickness, Root Mean Square Fluctuation (RMSF),  grouped in this order in four columns 

*_memprop.txt : contains the average values of the parameters in *_memprop_dt.txt

Order parameter DOPC and POPI lipids

*_order_dopc_dt.txt : contains the per-frame values of the order parameter for each carbon atom in the acyl chains sn1 and sn2

*_order_dopc.txt : contains the average values and standard deviation of the values in *_order_dopc_dt.txt
 
*_order_popi_dt.txt :  analogous to order_dopc_dt.txt

*_order_popi.txt : analogous to order_dopc_dt.txt



We then run the final_analysis.sh, located in the analysis folder of each system (e.g. analyses/8per for the 8per system)

bash final_analysis.sh

This script used the python script collection_mean_sd.py (located in the same folder) to compute the averages and standard deviations of the calculated properties. In the case of Area per lipid and membrane thickness, the script calculated: i) the average and standard deviation along the simulation time of each replicate of each system, ii) the average and standard deviation over the first three replicates of each system. In the case of the order parameter for the acyl chain sn-1 of DOPC and POPI, the script calculated the average and standard deviation over the first three replicates of each system. For the order parameter for the acyl chain sn-1, the averages and standard deviation along the simulation time of each replicate of each system are already available from the previous step (i.e.*_order_dopc.txt ). This script perform these calculations on both the 300ns and 500ns data. The resulting files of this step can be either found in avg_300ns/ and avg_500ns/ located in the specific folder of each system and each replicate  (e.g. analyses/8per/replicate1/avg_300ns/ for the 8per system replicate 1). The name of the output files is the same for all the systems and replicates and depends again on the suffix:

Area per Lipid and Thickness 

apl_replicate1-3_*.csv : contains the averaged value and standard deviation calculated along the first three replicates as described in the manuscript 
apl_time_all_repl_*.csv : contains all the averaged values and standard deviations for all the replicates along the simulation time. Important is that the data are ordered, so the first column is the averaged value for the first replicate, the second column the value for the second replicate and so on. The same order is conserved also for the columns containing the standard deviation
thickness_replicate1-3_*.csv analogous to apl_replicate1-3_*.csv but for the membrane thickness 
thickness_time_all_repl_*.csv analogous to apl_time_all_repl_*.csv but for the membrane  thickness

Order parameter DOPC and POPI lipids

op_dopc_replicate1-3_300ns.csv  analogous to apl_replicate1-3_*.csv  for DOPC lipids 
op_dopc_time_all_repl_300ns.csv  analogous to apl_time_all_repl_*.csv for the DOPC lipids
op_popi_replicate1-3_300ns.csv   analogous to op_dopc_replicate1-3_300ns.csv for the POPI lipids 
op_popi_time_all_repl_300ns.csv analogous to op_popi_time_all_repl_300ns.csv for the POPI lipids

NB * is either 300ns or 500ns depending on the trajectory for the analysis

To conclude this section, we repeated these steps for the systems systems 8per, 16per,  24per,  32per,  40per,  48per,  64per,  96per and Null/256lipids_heavyh .

The final step of the analysis consists in running the script “collect_everything.sh” located in analyses/ folder , to access it from 8per/ : 

                                                    cd ../
And run it with :
bash collect_everything.sh

This script simply uses UNIX commands to collect all the data computed with “final_analysis.sh”  and create different .csv files named after the figures used for the manuscripts (Fig2_A.csv...Fig2_D.csv,FigS1_A.csv...FigS1_D.csv,FigS2_A.csv...FigS2_D.csv)


